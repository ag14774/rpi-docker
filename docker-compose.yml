version: "3"

volumes:
  files:
    driver: local
    driver_opts:
        type: volume
        device: ${OWNCLOUD_DATA_PATH}/files
        o: bind
  mysql:
    driver: local
    driver_opts:
        type: volume
        device: ${OWNCLOUD_DATA_PATH}/mysql
        o: bind
  redis:
    driver: local
    driver_opts:
        type: volume
        device: ${OWNCLOUD_DATA_PATH}/redis
        o: bind
  backup:
    driver: local
    driver_opts:
      type: volume
      device: ${LOCAL_BACKUP_PATH}
      o: bind

services:
  cloudflare:
    build:
      context: ./cloudflare-dns
      dockerfile: Dockerfile
      args:
        cloudflare_email: ${CLOUDFLARE_EMAIL}
        cloudflare_key: ${CLOUDFLARE_KEY}
        cloudflare_domain: ${CLOUDFLARE_DOMAIN}
        cloudflare_subdomains: ${CLOUDFLARE_SUBDOMAIN}
    container_name: cloudflare_dyndns
    restart: always
    labels:
      - "traefik.enable=false"

  reverse-proxy:
    # The official v2 Traefik docker image
    build:
      context: ./traefik
      dockerfile: Dockerfile
      args:
        traefik_email: ${TRAEFIK_EMAIL}
    # Enables the web UI and tells Traefik to listen to docker
    command:
      #- "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    restart: always
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      #- "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/acme.json:/acme.json
    labels:
      - "traefik.enable=false"

  owncloud:
    build:
      context: ./owncloud
      dockerfile: Dockerfile
      args:
        owncloud_version: ${OWNCLOUD_VERSION}
    container_name: owncloud_server
    restart: always
    #ports:
    #  - ${HTTP_PORT}:8080
    depends_on:
      - mariadb
      - redis
      - reverse-proxy
      - cloudflare
    environment:
      - OWNCLOUD_DOMAIN=${OWNCLOUD_DOMAIN}
      - OWNCLOUD_DB_TYPE=mysql
      - OWNCLOUD_DB_NAME=owncloud
      - OWNCLOUD_DB_USERNAME=owncloud
      - OWNCLOUD_DB_PASSWORD=owncloud
      - OWNCLOUD_DB_HOST=mariadb
      - OWNCLOUD_ADMIN_USERNAME=${ADMIN_USERNAME}
      - OWNCLOUD_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - OWNCLOUD_MYSQL_UTF8MB4=true
      - OWNCLOUD_REDIS_ENABLED=true
      - OWNCLOUD_REDIS_HOST=redis
    labels:
      - "traefik.http.routers.owncloud.rule=${OWNCLOUD_CERTIFICATE_DOMAIN}"
      - "traefik.docker.network=web"
      - "traefik.http.routers.owncloud.entrypoints=websecure"
      - "traefik.http.routers.owncloud.tls=true"
      - "traefik.http.routers.owncloud.tls.certresolver=le"
      - "traefik.enable=true"
    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - files:/mnt/data
      - backup:/mnt/backup

  mariadb:
    image: mariadb:10.5
    container_name: owncloud_mariadb
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=owncloud
      - MYSQL_USER=owncloud
      - MYSQL_PASSWORD=owncloud
      - MYSQL_DATABASE=owncloud
    command: ["--max-allowed-packet=128M", "--innodb-log-file-size=64M"]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "--password=owncloud"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mysql:/var/lib/mysql
    labels:
      - "traefik.enable=false"

  redis:
    image: redis:6
    container_name: owncloud_redis
    restart: always
    command: ["--databases", "1"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis:/data
    labels:
      - "traefik.enable=false"

  duplicity:
    build:
      context: ./duplicity
      dockerfile: Dockerfile
      args:
        client_id: ${GDRIVE_CLIENT_ID}
        client_secret: ${GDRIVE_CLIENT_SECRET}
        duplicity_password: ${DUPLICITY_PASSWORD}
        duplicity_offsite_dest: ${DUPLICITY_OFFSITE_DEST}
    container_name: duplicity_gdrive_sync
    restart: always
    labels:
      - "traefik.enable=false"
    volumes:
      - backup:/mnt/backup
